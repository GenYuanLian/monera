<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ShopBstkWalletMapper">
	<resultMap id="BaseResultMap" type="com.genyuanlian.consumer.shop.model.ShopBstkWallet">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="owner_id" property="ownerId" jdbcType="BIGINT" />
		<result column="owner_type" property="ownerType" jdbcType="INTEGER" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="wallet_address" property="walletAddress" jdbcType="VARCHAR" />
		<result column="public_key_addr" property="publicKeyAddr" jdbcType="VARCHAR" />
		<result column="totel_amount" property="totelAmount" jdbcType="DECIMAL" />
		<result column="balance" property="balance" jdbcType="DECIMAL" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Where">
		<if test="id != null"> and id= #{id}</if>	
		<if test="ownerId != null"> and owner_id= #{ownerId}</if>	
		<if test="ownerType != null"> and owner_type= #{ownerType}</if>	
		<if test="mobile != null and mobile !=''"> and mobile= #{mobile}</if>
		<if test="walletAddress != null and walletAddress !=''"> and wallet_address= #{walletAddress}</if>
		<if test="publicKeyAddr != null and publicKeyAddr !=''"> and public_key_addr= #{publicKeyAddr}</if>
		<if test="totelAmount != null"> and totel_amount= #{totelAmount}</if>	
		<if test="balance != null"> and balance= #{balance}</if>	
		<if test="remark != null and remark !=''"> and remark= #{remark}</if>		
		<if test="createTime != null"> and create_time= #{createTime}</if>	
	</sql>
	<sql id="Base_Column_List">
		id ,
		owner_id ,
		owner_type ,
		mobile ,
		wallet_address ,
		public_key_addr ,
		totel_amount ,
		balance ,
		remark ,
		create_time 
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from shop_bstk_wallet
		where
		id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from shop_bstk_wallet
		where
		id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.genyuanlian.consumer.shop.model.ShopBstkWallet" useGeneratedKeys="true" keyProperty="id">
		insert into shop_bstk_wallet
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>	
			<if test="ownerId != null">owner_id,</if>	
			<if test="ownerType != null">owner_type,</if>	
			<if test="mobile != null and mobile !=''">mobile,</if>
			<if test="walletAddress != null and walletAddress !=''">wallet_address,</if>
			<if test="publicKeyAddr != null and publicKeyAddr !=''">public_key_addr,</if>
			<if test="totelAmount != null">totel_amount,</if>
			<if test="balance != null">balance,</if>		
			<if test="remark != null and remark !=''">remark,</if>			
			<if test="createTime != null">create_time,</if>	
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="ownerId != null">
				#{ownerId,jdbcType=BIGINT},
			</if>
			<if test="ownerType != null">
				#{ownerType,jdbcType=INTEGER},
			</if>
			<if test="mobile != null and mobile !=''">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="walletAddress != null and walletAddress !=''">
				#{walletAddress,jdbcType=VARCHAR},
			</if>
			<if test="publicKeyAddr != null and publicKeyAddr !=''">
				#{publicKeyAddr,jdbcType=VARCHAR},
			</if>
			<if test="totelAmount != null">
				#{totelAmount,jdbcType=DECIMAL},
			</if>
			<if test="balance != null">
				#{balance,jdbcType=DECIMAL},
			</if>			
			<if test="remark != null and remark !=''">
				#{remark,jdbcType=VARCHAR},
			</if>			
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.genyuanlian.consumer.shop.model.ShopBstkWallet">
		update shop_bstk_wallet
		<set>
			<if test="ownerId != null">
				owner_id= #{ownerId,jdbcType=BIGINT},
			</if>
			<if test="ownerType != null">
				owner_type= #{ownerType,jdbcType=INTEGER},
			</if>
			<if test="mobile != null and mobile !=''">
				mobile= #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="walletAddress != null and walletAddress !=''">
				wallet_address= #{walletAddress,jdbcType=VARCHAR},
			</if>
			<if test="publicKeyAddr != null and publicKeyAddr !=''">
				public_key_addr= #{publicKeyAddr,jdbcType=VARCHAR},
			</if>
			<if test="totelAmount != null">
				totel_amount= #{totelAmount,jdbcType=DECIMAL},
			</if>
			<if test="balance != null">
				balance= #{balance,jdbcType=DECIMAL},
			</if>			
			<if test="remark != null and remark !=''">
				remark= #{remark,jdbcType=VARCHAR},
			</if>			
			<if test="createTime != null">
				create_time= #{createTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		where
		id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getAll" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from shop_bstk_wallet where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from shop_bstk_wallet where 1=1
		<include refid="Base_Where" />
	</select>
	<select id="pageData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from shop_bstk_wallet where 1=1
		<include refid="Base_Where" />
		order by create_time DESC
		LIMIT #{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}		
	</select>

	<select id="selectByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from shop_bstk_wallet where id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="selectByMemberIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from shop_bstk_wallet where owner_type=1 and owner_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<select id="getBalanceSum" resultType="java.util.Map"> 
		select sum(balance) balanceSum 
		from shop_bstk_wallet 
		where balance>0
		<include refid="Base_Where" />
	</select>
</mapper>
